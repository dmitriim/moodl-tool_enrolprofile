{"version":3,"file":"presets.min.js","sources":["../src/presets.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Presets management.\n * @module      tool_enrolprofile/prestes\n * @copyright   2024 Dmitrii Metelkin <dnmetelk@gmail.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {add as notifyUser} from 'core/toast';\nimport Ajax from 'core/ajax';\nimport * as DynamicTable from 'core_table/dynamic';\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\n\n/**\n *\n * @type {{ADD_NEW_RECORD_BUTTON: string}}\n */\nconst SELECTORS = {\n    ADD_PRESET_BUTTON: '#addpresetbutton',\n    ACTION: '[data-action]',\n};\n\n\n/**\n * Gets dynamic table root container.\n *\n * @returns {*}\n */\nconst getTableRoot = () => {\n    return document.querySelector(DynamicTableSelectors.main.region);\n};\n\n/**\n * Edit the log record.\n *\n * @param {string} id record ID.\n */\nconst editPreset = (id) => {\n    const form = new ModalForm({\n        formClass: \"tool_enrolprofile\\\\preset_form\",\n        args: {\n            id: id,\n        },\n        modalConfig: {\n            title: getString('preset', 'tool_enrolprofile'),\n        },\n    });\n\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\n        if (id === 0) {\n            sendFeedback('add');\n        } else {\n            sendFeedback('edit');\n        }\n    });\n\n    form.show();\n};\n\n/**\n * Delete the log record.\n * @param {string} id ruleid.\n */\nconst deletePreset = (id) => {\n    const pendingPromise = new Pending('tool_enrolprofile/form:confirmdelete');\n\n    getStrings([\n        {'key': 'confirm'},\n        {'key': 'confirm:delete', component: 'tool_enrolprofile'},\n        {'key': 'yes'},\n        {'key': 'no'},\n    ])\n        .then(strings => {\n            return Notification.confirm(strings[0], strings[1], strings[2], strings[3], function() {\n                Ajax.call([{\n                    methodname: 'tool_enrolprofile_delete_preset',\n                    args: {\n                        id: id,\n                    }\n                }])[0]\n                    .then(function () {\n                        sendFeedback('delete');\n                    })\n                    .catch(Notification.exception);\n            });\n        })\n        .then(pendingPromise.resolve)\n        .catch(Notification.exception);\n};\n\n\n/**\n * Send feedback to a user.\n *\n * @param {string} action Action to send feedback about.\n */\nconst sendFeedback = (action) => {\n    getString('completed:' + action, 'tool_enrolprofile')\n        .then(message => {\n            notifyUser(message);\n            const tableRoot = getTableRoot();\n            if (tableRoot) {\n                DynamicTable.refreshTableContent(tableRoot).catch(Notification.exception);\n            }\n        }).catch(Notification.exception);\n};\n\n/**\n * Attach events to add new record button.\n */\nconst attachAddNewButtonEvents = () => {\n    const addNewRecordButton = document.querySelector(SELECTORS.ADD_PRESET_BUTTON);\n    if (addNewRecordButton) {\n        addNewRecordButton.addEventListener('click', e => {\n            e.preventDefault();\n            editPreset(0);\n        });\n    }\n};\n\n/**\n * Attach events to actions.\n */\nconst attachTableActionEvents = () => {\n    document.querySelectorAll(SELECTORS.ACTION).forEach(element => {\n        element.addEventListener('click', e => {\n            e.preventDefault();\n            const actionElement = e.target.closest(SELECTORS.ACTION);\n            const id = actionElement.dataset.id;\n            const action = actionElement.dataset.action;\n            switch (action) {\n                case 'edit':\n                    editPreset(id);\n                    break;\n                case 'delete':\n                    deletePreset(id);\n                    break;\n            }\n        });\n    });\n};\n\n/**\n * Init.\n */\nexport const init = () => {\n    attachAddNewButtonEvents();\n    attachTableActionEvents();\n    document.addEventListener(DynamicTable.Events.tableContentRefreshed, () => attachTableActionEvents());\n};\n"],"names":["SELECTORS","editPreset","id","form","ModalForm","formClass","args","modalConfig","title","addEventListener","events","FORM_SUBMITTED","sendFeedback","show","action","then","message","tableRoot","document","querySelector","DynamicTableSelectors","main","region","DynamicTable","refreshTableContent","catch","Notification","exception","attachTableActionEvents","querySelectorAll","forEach","element","e","preventDefault","actionElement","target","closest","dataset","pendingPromise","Pending","component","strings","confirm","call","methodname","resolve","deletePreset","addNewRecordButton","attachAddNewButtonEvents","Events","tableContentRefreshed"],"mappings":";;;;;;89BAmCMA,4BACiB,mBADjBA,iBAEM,gBAkBNC,WAAcC,WACVC,KAAO,IAAIC,mBAAU,CACvBC,UAAW,iCACXC,KAAM,CACFJ,GAAIA,IAERK,YAAa,CACTC,OAAO,mBAAU,SAAU,wBAInCL,KAAKM,iBAAiBN,KAAKO,OAAOC,gBAAgB,KAE1CC,aADO,IAAPV,GACa,MAEA,WAIrBC,KAAKU,QAwCHD,aAAgBE,6BACR,aAAeA,OAAQ,qBAC5BC,MAAKC,yBACSA,eACLC,UAvEPC,SAASC,cAAcC,mBAAsBC,KAAKC,QAwE7CL,WACAM,aAAaC,oBAAoBP,WAAWQ,MAAMC,sBAAaC,cAEpEF,MAAMC,sBAAaC,YAmBxBC,wBAA0B,KAC5BV,SAASW,iBAAiB7B,kBAAkB8B,SAAQC,UAChDA,QAAQtB,iBAAiB,SAASuB,IAC9BA,EAAEC,uBACIC,cAAgBF,EAAEG,OAAOC,QAAQpC,kBACjCE,GAAKgC,cAAcG,QAAQnC,UAClBgC,cAAcG,QAAQvB,YAE5B,OACDb,WAAWC,cAEV,SAvECA,CAAAA,WACZoC,eAAiB,IAAIC,iBAAQ,6DAExB,CACP,KAAQ,WACR,KAAQ,iBAAkBC,UAAW,qBACrC,KAAQ,OACR,KAAQ,QAEPzB,MAAK0B,SACKf,sBAAagB,QAAQD,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,IAAI,yBACnEE,KAAK,CAAC,CACPC,WAAY,kCACZtC,KAAM,CACFJ,GAAIA,OAER,GACCa,MAAK,WACFH,aAAa,aAEhBa,MAAMC,sBAAaC,gBAG/BZ,KAAKuB,eAAeO,SACpBpB,MAAMC,sBAAaC,YAgDRmB,CAAa5C,0BAUb,KAnCa,YACvB6C,mBAAqB7B,SAASC,cAAcnB,6BAC9C+C,oBACAA,mBAAmBtC,iBAAiB,SAASuB,IACzCA,EAAEC,iBACFhC,WAAW,OA+BnB+C,GACApB,0BACAV,SAAST,iBAAiBc,aAAa0B,OAAOC,uBAAuB,IAAMtB"}